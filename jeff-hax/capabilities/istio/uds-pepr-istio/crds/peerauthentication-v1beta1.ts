// This file is auto-generated by kubernetes-fluent-client, do not edit manually

import { GenericKind, RegisterKind } from "kubernetes-fluent-client";

export class PeerAuthentication extends GenericKind {
  /**
   * PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.
   */
  spec?: Spec;
  status?: { [key: string]: unknown };
}

/**
 * PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.
 */
export interface Spec {
  /**
   * Mutual TLS settings for workload.
   */
  mtls?: Mtls;
  /**
   * Port specific mutual TLS settings.
   */
  portLevelMtls?: { [key: string]: PortLevelMtl };
  /**
   * The selector determines the workloads to apply the ChannelAuthentication on.
   */
  selector?: Selector;
}

/**
 * Mutual TLS settings for workload.
 */
export interface Mtls {
  /**
   * Defines the mTLS mode used for peer authentication.
   */
  mode?: Mode;
}

/**
 * Defines the mTLS mode used for peer authentication.
 */
export enum Mode {
  Disable = "DISABLE",
  Permissive = "PERMISSIVE",
  Strict = "STRICT",
  Unset = "UNSET",
}

export interface PortLevelMtl {
  /**
   * Defines the mTLS mode used for peer authentication.
   */
  mode?: Mode;
}

/**
 * The selector determines the workloads to apply the ChannelAuthentication on.
 */
export interface Selector {
  /**
   * One or more labels that indicate a specific set of pods/VMs on which a policy should be
   * applied.
   */
  matchLabels?: { [key: string]: string };
}

RegisterKind(PeerAuthentication, {
  group: "security.istio.io",
  version: "v1beta1",
  kind: "PeerAuthentication",
});
